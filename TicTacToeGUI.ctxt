#BlueJ class context
comment0.target=TicTacToeGUI
comment1.params=
comment1.target=TicTacToeGUI()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ TicTacToe\r\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ setupNewGame()
comment2.text=\r\n\ Set\ up\ new\ game.\r\n\ Needs\ to\ be\ called\ from\ the\ GameChoiceButtonListener\ to\ start\ new\ games.\r\n\ Set\ turn\ to\ 1.\r\n\ Reset\ 9\ Square\ Buttons\ in\ array\ to\ values\ 1-9.\r\n
comment3.params=
comment3.target=void\ machinePlay()
comment3.text=\r\n\ Method\ to\ play\ as\ machine.\r\n\ There's\ no\ loop.\r\n\ It\ will\ call\ the\ getMachineSquare()\ method\ to\ get\ a\ square\ number\ to\ take\ and\ then\ take\ that\ square\ number.\r\n\ If\ it's\ a\ machine(X)\ vs\ human(O)\ game,\ it\ must\ be\ called\ from\ the\ GameChoiceButtonListener\ to\ start\ the\ game.\r\n\ If\ it's\ a\ machine(X)\ vs\ human(O)\ game\ or\ human(X)\ vs\ machine(O)\ game,\ it\ must\ be\ called\ from\ the\ \r\n\ \ \ \ \ \ SquareButtonListener\ after\ a\ human\ player\ take\ a\ turn.\r\n
comment4.params=
comment4.target=void\ setGameStatusLabel()
comment4.text=\r\n\ Display\ game\ status\ in\ game\ status\ label.\r\n\ Display\ whose\ turn\ it\ is,\ who\ has\ won\ or\ whether\ it's\ a\ draw.\r\n\ It\ must\ be\ called\ from\ the\ SquareButtonListener\ and\ the\ machinePlay()\ method.\r\n
comment5.params=squareNumber
comment5.target=void\ takeSquare(int)
comment5.text=\r\n\ takeSquare\:\ Method\ to\ put\ "X"\ or\ "O"\ in\ one\ of\ the\ 9\ Square\ buttons\r\n\ Place\ an\ "X"\ or\ "O"\ in\ the\ square\ indicated\ by\ squareNumber,\ depending\ on\ the\ value\ of\ turn.\r\n\ Called\ from\ machinePlay()\ or\ from\ the\ SquareButtonListener.\r\n\r\n\ @param\ squareNumber\ (number\ from\ 1\ -\ 9)\r\n
comment6.params=squareNumber
comment6.target=boolean\ validSquare(int)
comment6.text=\r\n\ validSquare\:\ Method\ to\ check\ if\ input\ squareNumber\ is\ valid.\r\n\ A\ squareNumber\ is\ valid\ if\ it's\ between\ 1-9\ AND\r\n\ if\ the\ board[squareNumber]\ does\ not\ contain\ an\ 11\ (X)\ or\ 12\ (O).\r\n\ \r\n\ @param\ squareNumber\r\n\ @return\ valid,\ true\ if\ valid,\ false\ if\ invalid\r\n
comment7.params=
comment7.target=boolean\ hasWon()
comment7.text=\r\n\ hasWon\:\ Check\ for\ game\ won.\ Called\ at\ the\ end\ a\ turn.\r\n\ \ \ \ \ \ \ \ \ If\ this\ method\ returns\ true,\ X\ or\ O\ has\ won.\r\n\ @return\ won,\ true\ or\ false\r\n
comment8.params=
comment8.target=int\ getMachineSquare()
comment8.text=\r\n\ getMachineSquare\:\ This\ method\ contains\ an\ algorithm\ through\ which\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ computer\ will\ choose\ a\ valid\ square\ number\ to\ take\ to\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ win\ the\ game\ or\ to\ prevent\ the\ opponent\ from\ winning\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ game.\ The\ computer\ can\ be\ playing\ either\ X\ or\ O.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ This\ represents\ an\ experienced\ machine\ type\ player.\r\n\ @return\ squareNumber,\ a\ valid\ squareNumber\ from\ 1-9\r\n
comment9.params=
comment9.target=int\ getNoviceSquare()
comment9.text=\r\n\ getNoviceSquare\:\ Returns\ a\ random\ untaken\ square.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ This\ represents\ a\ novice\ machine\ type\ player.\r\n\ @return\ squareNumber,\ a\ valid\ squareNumber\ from\ 1-9\r\n
numComments=11
